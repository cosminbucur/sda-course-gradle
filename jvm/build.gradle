buildscript {
    ext {
        junitVersion= '5.4.2'
    }
    repositories {
        jcenter()
        gradlePluginPortal()
    }
}

plugins {
    id 'java'
}

java {
    group 'com.bucur'
    version '1.0-SNAPSHOT'
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}

//jar {
//    manifest {
//        attributes 'Main-Class': 'com.bucur.com.bucur.randomizer.Randomizer.java'
//    }
//}

jar {
    manifest {
        attributes 'Implementation-Version' : project.getVersion(),
                'Main-Class' : 'com.bucur.jvm.RandomizerApp'
    }
    from {
        configurations.compile.collect { file.isDirectory() ? file : zipTree(file) }
//        configurations.compile.collect { File file -> file.isDirectory() ? file : zipTree(file) }
    }
}

task copyJarToBin {
    copy {
        from 'build/libs/jvm-1.0-SNAPSHOT.jar'
        into rootProject.projectDir
    }
}

task buildApp (dependsOn: [clean, jar, copyJarToBin])

repositories {
    jcenter()
}

dependencies {

    //    testImplementation 'junit:junit:4.12'     // junit 4 tests

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"      // use junit 5 new methods
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"   // runs parametrized test
    testImplementation 'org.junit.platform:junit-platform-launcher:1.5.0'       // handle default launcher

    testImplementation 'org.assertj:assertj-core:3.12.2'                        // fluent assertions
    testImplementation 'org.mockito:mockito-core:2.28.2'                        // mocking framework

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"      // run legacy junit 4 tests
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"      // run junit 5 tests
}
